import streamlit as st
import pandas as pd
import io
import zipfile

st.set_page_config(page_title="–ü–µ—Ä–µ–æ—Ü–µ–Ω–∫–∞ –∫–≤–∞—Ä—Ç–∏—Ä", page_icon="üè†", layout="centered")
st.title("üè† –ü–µ—Ä–µ–æ—Ü–µ–Ω–∫–∞ –∫–≤–∞—Ä—Ç–∏—Ä –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º")
st.markdown("""
–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª Excel —Å –∫–≤–∞—Ä—Ç–∏—Ä–∞–º–∏, —Å—Ç–∞—Ç—É—Å, –ø—Ä–æ–µ–∫—Ç—ã –∏ —Å—É–º–º—É –ø—Ä–∏–±–∞–≤–∫–∏.  
–ù–∞ –≤—ã—Ö–æ–¥–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∞—Ä—Ö–∏–≤ —Å –ø–µ—Ä–µ–æ—Ü–µ–Ω—ë–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –ø—Ä–æ–µ–∫—Ç—É.
""")

uploaded_file = st.file_uploader("üì• –ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel-—Ñ–∞–π–ª", type=["xlsx"])

if uploaded_file:
    try:
        df = pd.read_excel(uploaded_file)
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
    else:
        required_cols = {"–°—Ç–∞—Ç—É—Å", "–ü—Ä–æ–µ–∫—Ç", "–°—Ç–æ–∏–º–æ—Å—Ç—å"}
        if not required_cols.issubset(df.columns):
            st.error(f"–§–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–ª–æ–Ω–∫–∏: {', '.join(required_cols)}")
        else:
            status_choice = st.radio("–ß—Ç–æ –ø–µ—Ä–µ–æ—Ü–µ–Ω–∏—Ç—å:", ["–≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–µ", "—Å–¥–∞–Ω–Ω—ã–µ"], index=0)
            add_val = st.number_input("–°–∫–æ–ª—å–∫–æ –¥–æ–±–∞–≤–∏—Ç—å –∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ (‚ÇΩ):", step=10000, min_value=0)
            projects = df[df["–°—Ç–∞—Ç—É—Å"] == status_choice]["–ü—Ä–æ–µ–∫—Ç"].unique()
            chosen_projects = st.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è –ø–µ—Ä–µ–æ—Ü–µ–Ω–∫–∏", projects)

            if st.button("–í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–µ—Å—á—ë—Ç"):
                if not chosen_projects:
                    st.warning("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç—ã!")
                else:
                    buffer = io.BytesIO()
                    with zipfile.ZipFile(buffer, "w") as zf:
                        for proj in chosen_projects:
                            df_proj = df[(df["–°—Ç–∞—Ç—É—Å"] == status_choice) & (df["–ü—Ä–æ–µ–∫—Ç"] == proj)].copy()
                            df_proj["–ù–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å"] = df_proj["–°—Ç–æ–∏–º–æ—Å—Ç—å"] + add_val
                            out_file = io.BytesIO()
                            df_proj.to_excel(out_file, index=False)
                            zf.writestr(f"{proj}.xlsx", out_file.getvalue())
                    buffer.seek(0)
                    st.success("–§–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã! –°–∫–∞—á–∞–π—Ç–µ –∞—Ä—Ö–∏–≤ –Ω–∏–∂–µ.")
                    st.download_button(
                        label="üì• –°–∫–∞—á–∞—Ç—å –∞—Ä—Ö–∏–≤",
                        data=buffer,
                        file_name="recalculated_projects.zip",
                        mime="application/zip"
                    )